[Tests]
  design = 'meshgenerators/HexIDPatternedMeshGenerator.md'
  issues = '#19217'
  [assembly.cell]
    type = 'Exodiff'
    input = 'assembly_reporting_id.i'
    exodiff = 'assembly_reporting_id_cell_out.e'
    cli_args = "Outputs/file_base='assembly_reporting_id_cell_out'"
    requirement = 'The system shall generate pin reporting IDs for hexagonal assembly with assign_type=cell (default)'
    recover = false
  []
  [assembly.pattern]
    type = 'Exodiff'
    input = 'assembly_reporting_id.i'
    exodiff = 'assembly_reporting_id_pattern_out.e'
    cli_args = "Mesh/assembly/assign_type='pattern' Outputs/file_base='assembly_reporting_id_pattern_out'"
    requirement = 'The system shall generate pin reporting IDs for hexagonal assembly with assign_type=pattern'
    recover = false
  []
  [assembly.manual]
    type = 'Exodiff'
    input = 'assembly_reporting_id.i'
    exodiff = 'assembly_reporting_id_manual_out.e'
    cli_args = "Mesh/assembly/assign_type='manual' Mesh/assembly/id_pattern='2 2 2;2 1 1 2;2 1 0 1 2;2 1 1 2;2 2 2' Outputs/file_base='assembly_reporting_id_manual_out'"
    requirement = 'The system shall generate pin reporting IDs for hexagonal assembly with assign_type=manual'
    recover = false
  []
  [core]
    type = 'Exodiff'
    input = 'core_reporting_id.i'
    exodiff = 'core_reporting_id_out.e'
    requirement = 'The system shall generate pin and assembly reporting IDs for hexagonal core'
    recover = false
  []
  [core_exclude_id]
    type = 'Exodiff'
    input = 'core_reporting_id_exclude.i'
    exodiff = 'core_reporting_id_exclude_out.e'
    requirement = 'The system shall generate assembly reporting IDs for hexagonal core with exclude_id option'
    recover = false
  []
[]
